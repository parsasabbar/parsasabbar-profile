{"version":3,"sources":["assets/images/backgrounds/undraw_contact_us_15o2.svg","assets/images/backgrounds/undraw_Profile_re_4a55.svg","assets/images/backgrounds/undraw_Project_completed_re_pqqq.svg","assets/images/icons/experiences/Saj.png","assets/images/icons/experiences/matna.png","redux/PageMovingReducer.tsx","redux/AllReducers.tsx","components/loading/page-loading/PageLoading.tsx","assets/images/parsa-sabbar.png","assets/images/backgrounds/james-harrison-vpOeXr5wmR4-unsplash.jpg","components/loading/preload-images/PreloadImages.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PageMovingReducer","ActionTypes","state","action","type","PAGE_MOVING","data","AllReducers","combineReducers","PageLoading","PreloadImages","props","Preload","require","useState","loading","setLoading","images","sajImg","matnaImg","parsaImage","defaultBackgroundImage","contactPageTitleImage","aboutMePageTitleImage","workExperiencesPageTitleImage","autoResolveDelay","onSuccess","resolveOnError","mountChildren","children","RouteManager","lazy","App","AOS","init","delay","offset","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2GAAe,QAA0B,oD,gCCA1B,QAA0B,oD,gCCA1B,QAA0B,8D,gCCA1B,QAA0B,iC,gCCA1B,QAA0B,mC,8ECgB1BA,ICbHC,EDaGD,EAZf,WAGG,IAFDE,IAEA,yDADAC,EACA,uCACA,OAAIA,EAAOC,OAASH,EAAYI,cAC1BF,EAAOG,KAGJJ,I,SCTCD,K,2BAAAA,M,KAeZ,IAAMM,EAAcC,YAAgB,CAAER,sBAEvBO,O,iJCdAE,MAJf,WACE,OAAO,2C,wBCHM,MAA0B,yCCA1B,MAA0B,gE,gBCoC1BC,MA3Bf,SAAuBC,GACrB,IAAIC,EAAUC,EAAQ,IAAiBD,QAEvC,EAA8BE,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,OACE,eAACJ,EAAD,CAEEK,OAAQ,CACNC,IACAC,IACAC,EACAC,EACAC,IACAC,IACAC,KAEFC,iBAAkB,IAElBC,UAAW,kBAAMV,GAAW,IAC5BW,gBAAgB,EAChBC,eAAe,EAfjB,UAiBGb,EAAU,cAAC,EAAD,IAAkBJ,EAAMkB,SAAU,QCrB7CC,EAAeC,gBAAK,kBAAM,uDA0BjBC,MAxBf,WAeE,OAdAC,IAAIC,KAAK,CACPC,MAAO,IACPC,OAAQ,MAaR,cAAC,WAAD,CAAUC,SAAU,cAAC,EAAD,IAApB,SACE,cAAC,EAAD,UACE,cAACP,EAAD,SChBOQ,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gCCARQ,EAAQC,YACZzC,IACC0C,OAAeC,8BACbD,OAAeC,gCAGpBC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,IAAMM,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,UAINC,SAASC,eAAe,SAM1BjB,M","file":"static/js/main.0dcedba6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/undraw_contact_us_15o2.b4617052.svg\";","export default __webpack_public_path__ + \"static/media/undraw_Profile_re_4a55.d6186402.svg\";","export default __webpack_public_path__ + \"static/media/undraw_Project_completed_re_pqqq.0e4e6797.svg\";","export default __webpack_public_path__ + \"static/media/Saj.f73c0783.png\";","export default __webpack_public_path__ + \"static/media/matna.17f9a8c8.png\";","import React from \"react\";\r\nimport { ActionTypes, IActionModel, PageMovingStateType } from \"./AllReducers\";\r\n\r\nconst initialState: PageMovingStateType = true;\r\nfunction PageMovingReducer(\r\n  state = initialState,\r\n  action: IActionModel<PageMovingStateType>\r\n) {\r\n  if (action.type === ActionTypes.PAGE_MOVING) {\r\n    if (action.data) return true;\r\n    else return false;\r\n  } else {\r\n    return state;\r\n  }\r\n}\r\n\r\nexport default PageMovingReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport PageMovingReducer from \"./PageMovingReducer\";\r\n\r\nexport enum ActionTypes {\r\n  PAGE_MOVING = \"page-moving\",\r\n}\r\n\r\nexport interface IActionModel<T> {\r\n  type: ActionTypes;\r\n  data: T;\r\n}\r\n\r\nexport interface IAllReducersType {\r\n  PageMovingReducer: PageMovingStateType;\r\n}\r\n\r\nexport type PageMovingStateType = boolean;\r\n\r\nconst AllReducers = combineReducers({ PageMovingReducer });\r\n\r\nexport default AllReducers;\r\n","import React from \"react\";\r\n\r\nfunction PageLoading() {\r\n  return <div>loading</div>;\r\n}\r\n\r\nexport default PageLoading;\r\n","export default __webpack_public_path__ + \"static/media/parsa-sabbar.3b12ff30.png\";","export default __webpack_public_path__ + \"static/media/james-harrison-vpOeXr5wmR4-unsplash.c097c572.jpg\";","import React, { useState } from \"react\";\r\nimport PageLoading from \"../page-loading/PageLoading\";\r\nimport contactPageTitleImage from \"../../../assets/images/backgrounds/undraw_contact_us_15o2.svg\";\r\nimport aboutMePageTitleImage from \"../../../assets/images/backgrounds/undraw_Profile_re_4a55.svg\";\r\nimport workExperiencesPageTitleImage from \"../../../assets/images/backgrounds/undraw_Project_completed_re_pqqq.svg\";\r\nimport parsaImage from \"../../../assets/images/parsa-sabbar.png\";\r\nimport defaultBackgroundImage from \"../../../assets/images/backgrounds/james-harrison-vpOeXr5wmR4-unsplash.jpg\";\r\nimport sajImg from \"../../../assets/images/icons/experiences/Saj.png\";\r\nimport matnaImg from \"../../../assets/images/icons/experiences/matna.png\";\r\nfunction PreloadImages(props: { children: any }) {\r\n  let Preload = require(\"react-preload\").Preload;\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  return (\r\n    <Preload\r\n      // loadingIndicator={loadingIndicator}\r\n      images={[\r\n        sajImg,\r\n        matnaImg,\r\n        parsaImage,\r\n        defaultBackgroundImage,\r\n        contactPageTitleImage,\r\n        aboutMePageTitleImage,\r\n        workExperiencesPageTitleImage,\r\n      ]}\r\n      autoResolveDelay={3000}\r\n      // onError={this._handleImageLoadError}\r\n      onSuccess={() => setLoading(false)}\r\n      resolveOnError={true}\r\n      mountChildren={true}\r\n    >\r\n      {loading ? <PageLoading /> : props.children}{\" \"}\r\n    </Preload>\r\n  );\r\n}\r\n\r\nexport default PreloadImages;\r\n","import React, { lazy, Suspense, useEffect, useState } from \"react\";\r\n//import RouteManager from \"./infrastructures/route/RouteManager\";\r\nimport \"./assets/sass/Main.scss\";\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\nimport { resolve } from \"path\";\r\nimport test from \"./assets/images/backgrounds/undraw_contact_us_15o2.svg\";\r\nimport PreloadImages from \"./components/loading/preload-images/PreloadImages\";\r\nimport PageLoading from \"./components/loading/page-loading/PageLoading\";\r\n\r\nconst RouteManager = lazy(() => import(\"./infrastructures/route/RouteManager\"));\r\n\r\nfunction App() {\r\n  AOS.init({\r\n    delay: 400,\r\n    offset: 150,\r\n  });\r\n\r\n  // const cacheImage = () => {\r\n  //   return new Promise((resolve, reject) => {\r\n  //     let image = new Image();\r\n  //     image.src = test;\r\n  //     image.onload = () => resolve(\"\");\r\n  //     image.onerror = () => reject();\r\n  //   });\r\n  // };\r\n\r\n  return (\r\n    <Suspense fallback={<PageLoading />}>\r\n      <PreloadImages>\r\n        <RouteManager />\r\n      </PreloadImages>\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { createStore } from \"redux\";\r\nimport AllReducers from \"./redux/AllReducers\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst store = createStore(\r\n  AllReducers,\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\r\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <HashRouter>\r\n        <App />\r\n      </HashRouter>\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}